* First experiment: 6 threads with 6 places; each place is 4 cores
  ----------------

     export OMP_NUM_THREADS=6
     export OMP_PLACES='{0,1,2,3},{4,5,6,7},{8,9,10,11},{12,13,14,15},{16,17,18,19},{20,21,22,23}'
     export OMP_PROC_BIND=spread                  
                                             
                                         These are core numbers.
                                         They are also called proc-ids.
                                           |
                                           v
            '{0,1,2,3},{4,5,6,7},{8,9,10,11},{12,13,14,15},{16,17,18,19},{20,21,22,23}'
             ^       ^
              1st place.  Threads id 0 can run on either core 0, core 1, core 2 or core 3.

             This list could have been generated by interal notaion:
             export OMP_PLACES='{0,1,2,3}:6:4'
                                (makes 6  places, with stride 4:
                                 take each value in the base and add 4, { 4, 5, 6, 7}
                                 take each value in the base and add 4, { 8, 9,10,11}
                                 ...
                                 take each value in the base and add 4, {20,21,22,23}
                                )

               
     amask_omp    # since Hyperthreading is not on, kernel view is the default

   1a.) How many cores can each thread float on?  ____
   1b.) If you wanted to use just even cores how would
        you write the expression in interval notation?     ___________________



       export OMP_PLACES='{0,2}:6:4'      # would {0:7:2}:2:14   work?
       amask_omp
   

   1c.) What is the pattern?



* Second experiment: increase to 12 threads
  -----------------
export OMP_NUM_THREADS=12

amask_omp 

   2a.) Are the places "oversubscribed".
   2b.) How are the additional 6 threads assigned?


* Fourth experiment:  explore OMP_DISPLAY_ENV
  -----------------
export OMP_NUM_THREADS=6
export OMP_DISPLAY_ENV=TRUE
amask_omp 

   4a.) What does DISPLAY_ENV do?
   4b.) Set places to something incorrect, and run again e.g.

      e.g. use this incorrect syntax (forgot to separate with commas):
     export OMP_PLACES='{0,1,2,3}{4,5,6,7}{8,9,10,11}{12,13,14,15}{16,17,18,19}{20,21,22,23}'
