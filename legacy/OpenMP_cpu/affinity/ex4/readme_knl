* First experiment: 4 MPI tasks, 17 threads per task
  ----------------

Exit your present idev session, and create a new one:

      export OMP_NUM_THREADS=17
      export OMP_PLACES=cores
      export OMP_PROC_BIND=spread

      ibrun -np 4 amask_hybrid

   1a.) Note that a PURE MPI mask is reported
        to that you can view the mask for each MPI rank.
        The next list is for the hybrid execution-- it
        shows the threads for each rank.

        At the OpenMP fork, the affinity of the threads can
        only be made from set bits of the parent MPI process.

        How has each thread mask been modified from
        the parent MPI rank's mask?

        



* Second experiment: increase thread number to 34 threads
  -----------------

    export OMP_NUM_THREADS=34

    ibrun  -np 4 amask_hybrid

    2a.)  How many threads are on a core?
    2b.)  How can you easily set one thread
          to have the first two HWTs of a core
          and another thread to have the 2nd
          HWTs on a core? (Hint: probably not.)
          Outline how you would do this with
          a place list.
