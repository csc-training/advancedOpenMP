HYBRID EXECUTION:

* First experiment: 2 MPI tasks, 14 threads per process
  ----------------

Set up an environment for using 2 MPI tasks, with each
MPI process have 14 threads.

      export OMP_NUM_THREADS=14
      export OMP_PLACES=cores

      mpirun -np 2 amask_hybrid

   1a.) Note that a PURE MPI mask is reported
        so that you can view the mask for each MPI rank.
        The next report is for the hybrid execution-- it
        shows the threads for each rank.

        Usually, at the OpenMP fork, the affinity of the threads can
        only be made from set bits of the parent MPI process.
        (Rank 0 and rank 1 are assigned to core 0 and 7 for the MPI tasks!)
        However, on bridges the affinity is reset by the run time.

        It appears the assignment are made according to the NUMA nodes:
          node 0 cpus: 0  1  2  3  4  5  6 14 15 16 17 18 19 20
          node 1 cpus: 7  8  9 10 11 12 13 21 22 23 24 25 26 27

        How has each thread mask been modified from
        the parent MPI rank's mask?

       



* Second experiment: change abstract name (OMP_PLACES) to sockets
  -----------------

      export OMP_PLACES=sockets

      mpirun -np 2 amask_hybrid

    2a.)  Where can each thread execute?


* Third Experiment:  What is the default (NON-OPENMP) affinity for this hybrid job:

      unset OMP_PROC_BIND 
      unset OMP_PLACES
      mpirun -np 2 amask_hybrid

    3a.)  Where can each thread execute?
