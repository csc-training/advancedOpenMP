* First experiment: 24 threads, 24 places
  ----------------

#unset OpenMP Affinity variables with the "unset" command.
#(they a probably set from the previous experiment)

    unset OMP_PROC_BIND  
    unset OMP_PLACES 
    unset OMP_DISPLAY_ENV

    export OMP_NUM_THREADS=24
    export OMP_PLACES=cores

    amask_omp

    1.) Would it be appropriate to say that any thread can run anywhere?
        ->__________________________________________

    Now, let's bind each thread to a single core.

    export OMP_NUM_THREADS=24
    export OMP_PLACES=cores

    amask_omp

    Note that each thread_number in the sequence 0, ... 23
    is assigned to a corespondingly numbered proc-id (core number).



* Second experiment (optional):  Use 1/2 the reads (12) and spread out
  -----------------

     export OMP_NUM_THREADS=12
     export OMP_PLACES=cores
     export OMP_PROC_BIND=spread
     amask_omp

  Now try this:
     export OMP_PLACES='{0,1}:12:2"
     amask_omp

    2a.)  What is the difference between these approaches.
          Does the explicit list in PLACES allow "more" floating?

          ->__________________________________________

* Third  experiment: experiment with options
  ----------------


Get amask general help
Execute amask_omp  with -pf  (print fast)

amask_omp --help
amask_omp   
amask_omp  -pf
